deployment:
  name: "cicd-stack"
  namespace: "default"
  repositories:
    - name: argo
      url: https://argoproj.github.io/argo-helm
    - name: longhorn
      url: https://charts.longhorn.io
    - name: metallb
      url: https://metallb.github.io/metallb
    - name: jetstack
      url: https://charts.jetstack.io
    - name: kong
      url: https://charts.konghq.com

  # Pre-deployment resources (applied BEFORE Helm charts)
#  pre_deploy_resources:
#    - apiVersion: v1
#      kind: Namespace
#      metadata:
#        name: monitoring
#        labels:
#          pod-security.kubernetes.io/enforce: restricted

  # Pre-deployment scripts (run BEFORE Helm charts)
#  pre_deploy_scripts:
#    - "bash pre-deploy/setup-root-ca.sh"
#    - "bash pre-deploy/install-longhorn-deps.sh"
#    - "bash pre-deploy/validate-longhorn-deps.sh"
#
#  # Post-deployment resources (applied AFTER Helm charts)
#  post_deploy_resources:
#    # MetalLB IP Address Pool (needs MetalLB deployed first)
#    - apiVersion: metallb.io/v1beta1
#      kind: IPAddressPool
#      metadata:
#        name: default-pool
#        namespace: metallb-system
#      spec:
#        addresses:
#          - "192.168.1.240-192.168.1.250"
#        autoAssign: true
#    
#    # MetalLB L2Advertisement (needs MetalLB deployed first)
#    - apiVersion: metallb.io/v1beta1
#      kind: L2Advertisement
#      metadata:
#        name: default-l2-adv
#        namespace: metallb-system
#      spec:
#        ipAddressPools:
#          - default-pool
#    
#    # cert-manager ClusterIssuer - Staging
#    - apiVersion: cert-manager.io/v1
#      kind: ClusterIssuer
#      metadata:
#        name: letsencrypt-staging
#      spec:
#        acme:
#          server: https://acme-staging-v02.api.letsencrypt.org/directory
#          email: admin@bitsb.dev
#          privateKeySecretRef:
#            name: letsencrypt-staging
#          solvers:
#          - http01:
#              ingress:
#                ingressClassName: kong
#    
#    # cert-manager ClusterIssuer - Production
#    - apiVersion: cert-manager.io/v1
#      kind: ClusterIssuer
#      metadata:
#        name: letsencrypt-prod
#      spec:
#        acme:
#          server: https://acme-v02.api.letsencrypt.org/directory
#          email: admin@bitsb.dev
#          privateKeySecretRef:
#            name: letsencrypt-prod
#          solvers:
#          - http01:
#              ingress:
#                ingressClassName: kong
#
  # Post-deployment scripts (run AFTER Helm charts)
  # post_deploy_scripts:
  #   - "bash post-deploy/wait-for-services.sh"

applications:
  # 1. MetalLB Load Balancer (foundation for LoadBalancer services)
#  metallb:
#    type: HELM
#    chart:
#      name: metallb/metallb
#      version: 0.15.2
#    namespace: metallb-system
#    values_file: values/metallb/values.yaml
#
#  # 2. cert-manager TLS Certificate Management (needed for HTTPS)
#  cert-manager:
#    type: HELM
#    chart:
#      name: jetstack/cert-manager
#      version: v1.16.2
#    namespace: cert-manager
#    values_file: values/cert-manager/values.yaml
#
#  # 3. Kong Gateway Ingress Controller (depends on MetalLB)
#  kong:
#    type: HELM
#    chart:
#      name: kong/kong
#      version: 2.40.0
#    namespace: ingress
#    values_file: values/kong/values.yaml
#
#  # 4. Longhorn Distributed Storage (depends on Kong for ingress)
#  longhorn:
#    type: HELM
#    chart:
#      name: longhorn/longhorn
#      version: 1.8.2
#    namespace: longhorn-system
#    values_file: values/longhorn/values.yaml
#        
#  # 5. ArgoCD GitOps Platform (depends on Kong and cert-manager)
  argocd:
    type: HELM
    chart:
      name: argo/argo-cd
      version: 7.8.5
    namespace: argocd
    values_file: values/argocd/values.yaml