apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: observability
  namespace: argocd
  labels:
    app.kubernetes.io/name: observability-appset
    app.kubernetes.io/part-of: observability
spec:
  generators:
  - list:
      elements:
      # Thanos: Long-term, highly available metrics storage and multi-cluster federation for Prometheus
      - name: thanos
        namespace: observability
        repoURL: https://thanos-io.github.io/thanos-helm-chart
        chart: thanos
        targetRevision: 30.2.0
        priority: "600"
      # ECK Operator: Manages Elasticsearch, Kibana, and Beats for log and metrics aggregation
      - name: eck-operator
        namespace: observability
        repoURL: https://helm.elastic.co
        chart: eck-operator
        targetRevision: 3.1.0
        priority: "100"
      # kube-prometheus-stack: Complete monitoring stack (Prometheus, Grafana, Alertmanager, exporters)
      - name: kube-prometheus-stack
        namespace: observability
        repoURL: https://prometheus-community.github.io/helm-charts
        chart: kube-prometheus-stack
        targetRevision: 58.3.0
        priority: "200"
      # Beats (Filebeat): Ships logs and metrics to Elasticsearch
      - name: beats
        namespace: observability
        repoURL: https://helm.elastic.co
        chart: filebeat
        targetRevision: 8.12.2
        priority: "300"
      # Zipkin: Distributed tracing for microservices
      - name: zipkin
        namespace: observability
        repoURL: https://openzipkin.github.io/zipkin
        chart: zipkin
        targetRevision: 0.1.2
        priority: "400"
      # Blackbox Exporter: Probes endpoints for availability and performance
      - name: blackbox-exporter
        namespace: observability
        repoURL: https://prometheus-community.github.io/helm-charts
        chart: prometheus-blackbox-exporter
        targetRevision: 8.15.0
        priority: "500"
  template:
    metadata:
      name: "{{name}}"
      labels:
        app.kubernetes.io/name: "{{name}}"
        app.kubernetes.io/part-of: observability
    spec:
      project: observability
      sources:
        - repoURL: "{{repoURL}}"
          chart: "{{chart}}"
          targetRevision: "{{targetRevision}}"
          helm:
            valueFiles:
              - $values/argocd/values/{{name}}/values.yaml
        - repoURL: https://github.com/bitsdalab/deployment.git
          targetRevision: feature/monitoring
          ref: values
      destination:
        server: https://kubernetes.default.svc
        namespace: "{{namespace}}"
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
          allowEmpty: false
        syncOptions:
        - CreateNamespace=true
        - PrunePropagationPolicy=foreground
        - PruneLast=true
        - Validate=true
        - SkipDryRunOnMissingResource=true
        - helm.skipTLSVerify=true
        retry:
          limit: 3
          backoff:
            duration: 5s
            factor: 2
            maxDuration: 3m
