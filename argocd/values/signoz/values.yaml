signoz:
  ingress:
    enabled: true
    className: kong
    hosts:
      - host: signoz.ops.bitsb.dev
        paths:
          - path: /
            pathType: Prefix
            port: 8080
    tls:
      - secretName: signoz-tls
        hosts:
          - signoz.ops.bitsb.dev
    annotations:
      cert-manager.io/cluster-issuer: "bitsb-root-ca-issuer"
      cert-manager.io/common-name: "signoz.ops.bitsb.dev"
      konghq.com/protocols: "https"
      konghq.com/https-redirect-status-code: "301"
      konghq.com/preserve-host: "true"
      konghq.com/strip-path: "false"
  frontend:
    replicaCount: 2
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi
    env:
      SIGNOZ_JWT_SECRET: "4CRRriBO7AX3eKBYHXyRV1bU"
  queryService:
    replicaCount: 2
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi
  otelCollector:
    replicaCount: 2
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi
    # Add filelog receiver for Kubernetes logs
    config:
      receivers:
        # Keep existing receivers
        otlp:
          protocols:
            grpc:
              endpoint: 0.0.0.0:4317
            http:
              endpoint: 0.0.0.0:4318
        # Add filelog receiver for K8s logs
        filelog:
          include:
            - /var/log/pods/*/*/*.log
          exclude:
            - /var/log/pods/*/otc-container/*.log
          start_at: beginning
          include_file_path: true
          include_file_name: false
          operators:
            - type: router
              id: get-format
              routes:
                - output: parser-docker
                  expr: 'body matches "^\\{"'
                - output: parser-crio
                  expr: 'body matches "^[^ Z]+ "'
                - output: parser-containerd
                  expr: 'body matches "^[^ Z]+Z"'
            - type: json_parser
              id: parser-docker
              output: extract_metadata_from_filepath
              timestamp:
                parse_from: attributes.time
                layout: '%Y-%m-%dT%H:%M:%S.%LZ'
            - type: regex_parser
              id: parser-crio
              regex: '^(?P<time>[^ Z]+) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*) ?(?P<log>.*)$'
              output: extract_metadata_from_filepath
              timestamp:
                parse_from: attributes.time
                layout: '%Y-%m-%dT%H:%M:%S.%L%z'
            - type: regex_parser
              id: parser-containerd
              regex: '^(?P<time>[^ ^Z]+Z) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*) ?(?P<log>.*)$'
              output: extract_metadata_from_filepath
              timestamp:
                parse_from: attributes.time
                layout: '%Y-%m-%dT%H:%M:%S.%LZ'
            - type: regex_parser
              id: extract_metadata_from_filepath
              regex: '^.*\/(?P<namespace>[^_]+)_(?P<pod_name>[^_]+)_(?P<uid>[a-f0-9\-]{36})\/(?P<container_name>[^\._]+)\/(?P<restart_count>\d+)\.log$'
              parse_from: attributes["log.file.path"]
            - type: move
              from: attributes.log
              to: body
            - type: move
              from: attributes.stream
              to: attributes["log.iostream"]
            - type: move
              from: attributes.container_name
              to: resource["k8s.container.name"]
            - type: move
              from: attributes.namespace
              to: resource["k8s.namespace.name"]
            - type: move
              from: attributes.pod_name
              to: resource["k8s.pod.name"]
            - type: move
              from: attributes.restart_count
              to: resource["k8s.container.restart_count"]
            - type: move
              from: attributes.uid
              to: resource["k8s.pod.uid"]
      service:
        pipelines:
          logs:
            receivers: [otlp, filelog]
            processors: [batch]
            exporters: [clickhouselogsexporter]
    # Required volumes for log collection
    extraVolumes:
      - name: varlogpods
        hostPath:
          path: /var/log/pods
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
    extraVolumeMounts:
      - name: varlogpods
        mountPath: /var/log/pods
        readOnly: true
      - name: varlibdockercontainers
        mountPath: /var/lib/docker/containers
        readOnly: true
  clickhouse:
    persistence:
      enabled: true
      size: 20Gi
      storageClass: longhorn
